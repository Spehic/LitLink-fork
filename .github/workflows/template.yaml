name: CI/CD for LitLink

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package --file backend/pom.xml


  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '11'

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Cache Maven dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.m2/repository
  #         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-maven-

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ secrets.GITHUB_REPOSITORY }}:latest
  #         build-args: |
  #           BUILD_VERSION=${{ github.sha }}
        
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  # deploy_to_aks:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Azure CLI
  #       uses: azure/setup-azurecli@v1
  #       with:
  #         azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #         azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
  #         azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}

  #     - name: Set up AKS credentials
  #       run: az aks get-credentials --resource-group <your-resource-group> --name <your-aks-cluster-name>

  #     - name: Deploy to Azure Kubernetes Service (AKS)
  #       run: kubectl apply -f k8s/deployment.yaml
